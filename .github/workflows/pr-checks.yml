name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [ main, develop ]

# Ensure only one workflow runs per PR
concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  # Fast feedback for PR author
  quick-checks:
    name: Quick Checks
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint check
        run: pnpm run lint

      - name: Format check  
        run: pnpm run format --check

      - name: Type check
        run: pnpm run type-check

      - name: Unit tests only
        run: pnpm run test:unit

  # Comprehensive testing for important PRs
  full-test-suite:
    name: Full Test Suite
    runs-on: ubuntu-latest
    needs: quick-checks
    if: |
      contains(github.event.pull_request.labels.*.name, 'critical') ||
      contains(github.event.pull_request.labels.*.name, 'release') ||
      github.event.pull_request.base.ref == 'main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run all tests
        run: |
          pnpm run test:unit
          pnpm run test:sensors
          pnpm run test:api || echo "API tests failed (expected without hardware)"

      - name: Build check
        run: |
          pnpm --filter @ultibiker/server build
          pnpm --filter @ultibiker/web build
          pnpm --filter @ultibiker/core build

  # Security check for sensitive changes
  security-review:
    name: Security Review
    runs-on: ubuntu-latest
    if: |
      contains(github.event.pull_request.changed_files, 'package.json') ||
      contains(github.event.pull_request.changed_files, 'src/auth/') ||
      contains(github.event.pull_request.changed_files, 'src/api/') ||
      contains(github.event.pull_request.labels.*.name, 'security')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Security audit
        run: pnpm audit --audit-level high

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD